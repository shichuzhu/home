# sudo apt update
# sudo apt install vim emacs git dkms openssh-server tmux iotop zsh
## adjust ssh port # /etc/ssh/sshd_config --> 49222
# sudo systemctl restart ssh

## install chrome
## sudo dpkg -i *.deb
# sudo apt install -f

## install displaylink driver ubuntu
## follow post https://support.displaylink.com/knowledgebase/articles/1843660-screen-freezes-after-opening-an-application-only
# sudo sh -c 'echo evdi >> /etc/modules'
# sudo sh -c 'echo "options evdi initial_device_count=2" > /etc/modprobe.d/evdi.conf'

## reboot, adjust settings and display, mouse speed, taskbars
## adjust boot timeout /etc/default/grub, do update-grub

## install noip2 based on https://www.noip.com/support/knowledgebase/installing-the-linux-dynamic-update-client-on-ubuntu/
# cd $HOME/Downloads
# wget http://www.no-ip.com/client/linux/noip-duc-linux.tar.gz
# tar xf noip-duc-linux.tar.gz
# cd noip-2.1.9-1
# make
# sudo make install
## add noip2 to default startup using systemd->crontab
# sudo crontab -eu root
## add the line "@reboot /usr/local/bin/noip2"

## install virtualbox https://www.virtualbox.org/wiki/Linux_Downloads
# sudo sh -c 'echo "deb https://download.virtualbox.org/virtualbox/debian artful contrib" >> /etc/apt/sources.list'
# wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
# sudo apt-get update
# sudo apt-get install virtualbox-5.2

## install NoMachine dpkg -i ....deb

## install variety
# sudo add-apt-repository ppa:peterlevi/ppa
# sudo apt-get update
# sudo apt-get install variety variety-slideshow

## link data drive to home

## install sogou pinyin
## sudo dpkg -i *.deb
## sudo apt install -f
## reboot and then config sogou. add sogou in the input method.

## llvm https://apt.llvm.org/
## add following two lines to /etc/apt/sources.list
## deb http://apt.llvm.org/artful/ llvm-toolchain-artful main
## deb-src http://apt.llvm.org/artful/ llvm-toolchain-artful main
## install the signature:
# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
# sudo apt update
# sudo apt-get install clang-5.0 clang-5.0-doc libclang-common-5.0-dev libclang-5.0-dev libclang1-5.0 libclang1-5.0-dbg libllvm-5.0-ocaml-dev libllvm5.0 libllvm5.0-dbg lldb-5.0 llvm-5.0 llvm-5.0-dev llvm-5.0-doc llvm-5.0-examples llvm-5.0-runtime clang-format-5.0 python-clang-5.0 libfuzzer-5.0-dev

# sudo apt install texlive-full golang

## install texstudio https://www.texstudio.org/

## Install java 8 (for hadoop 3.0.0)
## default path will be /usr/lib/jvm/java-9-oracle
# sudo add-apt-repository ppa:webupd8team/java
# sudo apt update
# sudo apt-get install oracle-java9-installer

## install JabRef
## in order to use JabRef, has to install java8, then set java9 as default and explicit use java8 path for JabRef
## sudo apt install oracle-java9-set-default

## Configure JabRef, set up launcher https://askubuntu.com/a/721387
## Appearance -> javax.swing.plaf.metal.MetalLookAndFeel
## Use Metal only, other fields have bugs downloading filelink (not responsive)
## File -> Main file directory -> gdrive.papers
## Add a symlink from JabRef-version.jar to JabRef.jar to facilitate version update.
## Add JaRef desktop entry to ~/.local/share/application/jabref.desktop...

## Allow Pageup/down for history searching http://dqxtech.net/blog/2011-03-06/linux-bash-history-pgup-pgdown
## Uncomment file /etc/inputrc for \e[5~ and \e[6~

# git config --global user.email "you@example.com"
# git config --global user.name "Your Name"
# git config --global core.editor "vim"
# git config --global diff.tool tkdiff
# git config --global merge.tool tkdiff
# git config --global --add difftool.prompt false

# sudo apt install gnome-tweak-tool

## setup zsh / oh-my-zsh
## https://github.com/robbyrussell/oh-my-zsh
# sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
## copy the config from my github/home, install fonts-powerline and change theme to agnoster

install zsh-syntax-highlighting, the config file is used in .zshrc
# .tmux fancy setup refer: https://github.com/gpakosz/.tmux
also add .tmux.conf --> .tmux/.tmux.conf soft link
The setting is slightly different on desktop VS laptop. Need to distinguish in the branch.
To run a command at a window starting, add the command to "panel" field in .tmuxinator/def.yml file.
Need to unset C-a as a prefix on chromebook (by overwriting with C-b) and make C-a directly send-prefix to remote.

## Chromebook specific --> powerline font for zsh agnoster theme
## install powerline font https://github.com/powerline/fonts
# sudo apt-get install fonts-powerline # https://packages.ubuntu.com/xenial/all/fonts-powerline/filelist
## This will install font to /usr/share/fonts/opentype/PowerLineSymbols.otf
## With the prefix of chroot /usr/local/chroots/xenial/ (From ChromeOS's perspective)
## Carefully follow steps https://gist.github.com/aaronhalford/a009bc73498407ae80e2 to allow writable ChromeOS FS
### Notes:
# sudo /usr/share/vboot/bin/make_dev_ssd.sh --remove_rootfs_verification
## RERUN with partition arg, e.g. ==> Denote as cmd1
# sudo crossystem dev_boot_signed_only=0
## RERUN cmd1
# sudo crossystem dev_boot_signed_only=0
## REBOOT
# sudo mount -o remount,rw /
### Notes END
## ln -s from Xenial's opentype to Chrome OS /usr/share/fonts/opentype
# sudo ln -s /usr/local/chroots/artful/usr/share/fonts/opentype /usr/share/fonts/opentype
## Follow https://github.com/dnschneid/crouton/wiki/Fonts to add linked opentype to /etc/fonts/local.conf in ChromeOS
## Reboot and now the fonts should show up in ChromeOS's font options, also add "PowerLineSymbols" to the FRONT of 
## Secure shell's configuration by Ctrl-Shift-P
## Crosh shares the same config with Secure Shell.

## Prevent chrome from popping didn't shut down correctly
## https://superuser.com/questions/697618/getting-google-chrome-didnt-shut-down-correctly-every-week
## ~/.config/google-chrome/Default/Preferences --> exit_type:"normal"

## ----------------------- Less important -----------------
## For jupyter lab -> vim mode
## https://github.com/jwkvam/jupyterlab_vim
## dependency
# sudo apt install libgif-dev libjpeg-dev
# conda install nodejs
# jupyter labextension install jupyterlab_vim
## jupyter labextension uninstall jupyterlab_vim

## Setup git support for TexStudio
## https://tex.stackexchange.com/questions/112396/texstudio-texmaker-and-github/112560
# git config --global alias.ci "commit"

## For tomcat, install the server version and local version is different. If trying to prevent server from autostart, use
#(with sudo) systemctl disable tomcat8
## Use this to check (with sudo) which app is using a given port: lsof -i :8080

## To set up vim
Go to the .vim/bundle, search for each repo and git clone in the same directory.

## To install drive: refer: 
https://github.com/odeke-em/drive/blob/master/platform_packages.md#ubuntu-or-ubuntu-based-distros
sudo add-apt-repository ppa:twodopeshaggy/drive
sudo apt-get install drive

To switch CAPS and ESC, go to tweak-tool --> keyboard & mouse -> additional layout --> caps --> ...

################################################ Chromebook installation log ################################
Enable debugging feature, latter to setup the chronos passwd:
https://github.com/dnschneid/crouton/issues/2050#issuecomment-322681627
Ctrl + alt + forward key, see instruction there.

crouton -r --list -t list
sudo -e crouton -r bionic -t xiwi,keyboard,touch
delete /usr/local/chroot/home and ln -s from the sdcard. This allows mounting home dir on a sd card ...

sudo apt install vim emacs git tmux zsh curl tmuxinator zsh-syntax-highlighting golang software-properties-common language-pack-en xsel

The oh-my-zsh throws char out of range. Refer to: 
https://github.com/robbyrussell/oh-my-zsh/issues/4786#issuecomment-172629100
uncomment en_US.UTF-8 and run
sudo locale-gen

For Spacemacs, font not found after install, might need to install the fonts to the chromeOS level. TODO

For xiwi to work with reasonable resolution, follow guide here
https://github.com/dnschneid/crouton/wiki/Chromebook-Pixel#hidpi-in-xiwi-window
Crouton Integration --> HiDPI
sudo vi /etc/crouton/xserverrc-xiwi  ==> -dpi 180*180
and use a dpi like 180
